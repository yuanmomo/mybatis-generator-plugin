<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>

    <!-- load propertis file  -->
    <properties resource="mbg.properties"/>

    <!-- MBG root config. -->
    <!-- if there are multi databases, then config multi <context> elements for one to one.
        Notice, the id should be unique.-->
    <context id="mbg_schema" targetRuntime="MyBatis3" defaultModelType="conditional">

        <!-- A plugin for generating hashCode and equals methods. -->
        <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"/>

        <!-- A plugin for making the bean classes extends java.io.Serializable interface. -->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>

        <!-- Whether like queries is case sensitive. -->
        <plugin type="org.mybatis.generator.plugins.CaseInsensitiveLikePlugin"/>

        <!-- A plugin for generating toString method. -->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>

        <!-- Rename the example classes. -->
        <plugin type="org.mybatis.generator.plugins.RenameExampleClassPlugin">
            <property name="searchString" value="Example$"/>
            <property name="replaceString" value="Param"/>
        </plugin>

        <!-- ******************************* customize plugins ******************************* -->
        <!-- add an extra selectOneByExample method into mapper class -->
        <plugin type="com.github.yuanmomo.mybatis.mbg.plugin.selectone.MapperAddSelectOneByExamplePlugin">
            <property name="methodName" value="getOneByExample"/>
        </plugin>

        <!-- add an extra batchInsert method into mapper class -->
        <plugin type="com.github.yuanmomo.mybatis.mbg.plugin.batch.MySqlBatchInsertPlugin">
            <property name="methodName" value="batchInsert"/>
        </plugin>

        <!-- Pagination plugin. -->
        <plugin type="com.github.yuanmomo.mybatis.mbg.plugin.PaginationPlugin"/>

        <!-- Extra DAO interface. -->
        <plugin type="com.github.yuanmomo.mybatis.mbg.plugin.DAOPlugin">
            <property name="typeName" value="DAO"/>
        </plugin>

        <!-- suppress date in generated comment -->
        <commentGenerator>
            <property name="suppressDate" value="true"/>
        </commentGenerator>

        <!-- jdbc configuration -->
        <jdbcConnection driverClass="${driver}" connectionURL="${url}"
                        userId="${username}" password="${password}">
        </jdbcConnection>

        <!-- java type resolver config -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- java bean configuration -->
        <javaModelGenerator targetPackage="${mbg.modelPackage}"
                            targetProject="${mbg.targetProject}">
            <!-- if multi databases, the  set enableSubPackages true -->
            <!--<property name="enableSubPackages" value="true"/>-->
        </javaModelGenerator>

         <!--mapper xml configuration (replaced by provider class) -->
        <!--<sqlMapGenerator targetPackage="${mbg.sqlMapPackage}"-->
        <!--targetProject="${mbg.targetProject}">-->
        <!--<property name="enableSubPackages" value="true" />-->
        <!--</sqlMapGenerator>-->

        <!-- mapper interface configuration, also provider classes -->
        <javaClientGenerator type="ANNOTATEDMAPPER"
                             targetPackage="${mbg.javaClientPackage}" targetProject="${mbg.targetProject}">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!-- table configuration list -->
        <table tableName="table_to_do" domainObjectName="ToDo">
            <!-- The schema of this table, equal to the database name.
                If configured, then the sql will be "select xxxtable from schema.table".
                It's useful when there are multi databases.
                -->
            <!--<property name="runtimeSchema" value="todo"/>-->

            <!-- The auto increment key -->
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
        </table>
    </context>
</generatorConfiguration>